<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\redts_y_requirements;

class requirementsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //redts_y_requirements::truncate(); //delete all data
        redts_y_requirements::create(['id' => 1,  'subclass_id' => 1, 'title' => 'Application Letter', 'slug' => 'AL', 'description' => 'Application Letter (1 copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 2,  'subclass_id' => 1, 'title' => 'LGU Endorsement or Certification of No Objection', 'slug' => 'LGUECNO', 'description' => 'LGU Endorsement/Certification of No Objection (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 3,  'subclass_id' => 1, 'title' => 'Endorsement from concerned LGU', 'slug' => 'EFCLGU', 'description' => 'Endorsement from concerned LGU interposng no objection to the cutting of trees under the following conditions (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 4,  'subclass_id' => 1, 'title' => 'Environmental Compliance Certificate', 'slug' => 'ECC', 'description' => 'Environmental Compliance Certificate (ECC)/Certificate of Non-Coverage (CNC)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 5,  'subclass_id' => 1, 'title' => 'Utilization Plan', 'slug' => 'UP', 'description' => 'Utilization Plan with at least 50% of the area covered with the forest trees (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 6,  'subclass_id' => 1, 'title' => 'Endorsement by local Agrarian Reform Officer', 'slug' => 'EBLARO', 'description' => 'Endorsement by local Agrarian Reform Officer interposing No Objection (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 7,  'subclass_id' => 1, 'title' => 'PTA Resolution', 'slug' => 'PTAR', 'description' => 'PTA Resolution or Resolution from any organized group of No Objection and Reason for Cutting for School/Organization (1 copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 8,  'subclass_id' => 1, 'title' => 'CLOA issued the Land Registration Authority', 'slug' => 'CLOA', 'description' => 'Authenticated copy of land title/CLOA issued the Land Registration Authority or registry of Deeds, whichever is applicable','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 9,  'subclass_id' => 2, 'title' => 'Application Letter', 'slug' => 'AL', 'description' => 'Application Letter (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 10,  'subclass_id' => 2, 'title' => 'LGU Endorsement or Certification of No Objection', 'slug' => 'LGUECNO', 'description' => 'LGU Endorsement/Certification of No Objection (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 11,  'subclass_id' => 2, 'title' => 'Endorsement from concerned LGU', 'slug' => 'EFCLGU', 'description' => 'Endorsementfrom concerned LGU interposing no objection (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 12,  'subclass_id' => 2, 'title' => 'Environmental Compliance Certificate', 'slug' => 'ECC', 'description' => 'Environmental Compliance Certificate (ECC)/Certificate of No-Coverage (CNC), if applicable','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 13,  'subclass_id' => 2, 'title' => 'Utilization Plan', 'slug' => 'UP', 'description' => 'Utilization Plan with at least 50% of of the area covered with forest trees (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 14,  'subclass_id' => 2, 'title' => 'Endorsement by local agrarian reform officer', 'slug' => 'EBLARO', 'description' => 'Endorsement by local agrarian reform officer interposing No Objection (1 Copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 15,  'subclass_id' => 2, 'title' => 'PTA Resolution', 'slug' => 'PTAR', 'description' => 'PTA Resolution or Resolution from any organized group of No Objection and Reason for Cutting for School/Organization (1 copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 16,  'subclass_id' => 2, 'title' => 'CLOA issued the Land Registration Authority', 'slug' => 'CLOA', 'description' => 'Authenticated copy of land title/CLOA issued the Land Registration Authority or Registry of Deeds, whichever is applicable','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 18,  'subclass_id' => 3, 'title' => 'Application Letter', 'slug' => 'AL', 'description' => 'Application Letter (1 original)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 19,  'subclass_id' => 3, 'title' => 'LGU Endorsement or Certification of No Objection', 'slug' => 'LGUECNO', 'description' => 'LGU Endorsement/Certification of No Objection (1 original copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 20,  'subclass_id' => 3, 'title' => 'Timber Inventory of Trees to be Cut', 'slug' => 'TIOTTBC', 'description' => 'Report duly signed by the forest officers who conducted the timber inventory of trees to be cut, to include the result of 100% timber inventory Additional if within Subdivisions','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 21,  'subclass_id' => 3, 'title' => 'Homeowners Resolution', 'slug' => 'HOR', 'description' => 'Homeowner\'s Resolution (1 original)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 22,  'subclass_id' => 3, 'title' => 'PTA Resolution', 'slug' => 'PTAR', 'description' => 'PTA Resolution or Resolution from any organize group of No Objection and Reason for Cutting (1 original)','attachment_type' => 'file' , 'requirement_type' => 'additional']);
        
        redts_y_requirements::create(['id' => 23,  'subclass_id' => 4, 'title' => 'Application Letter', 'slug' => 'AL', 'description' => 'Letter of Application (1 original)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 24,  'subclass_id' => 4, 'title' => 'LGU Endorsement or Certification of No Objection', 'slug' => 'LGUECNO', 'description' => 'LGU Endorsement Certification of No Objection (1 original)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 25,  'subclass_id' => 4, 'title' => 'Approved Site Development Plan', 'slug' => 'ASDP', 'description' => 'Approved Site Development Plan/Infrastructure Plan with tree charting (original)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 26,  'subclass_id' => 4, 'title' => 'Environmental Compliance Certificate', 'slug' => 'ECC', 'description' => 'Environmental Compliance Certificate (ECC)/Certificate of Non Coverage CNC), if applicable. The DENR ROIEMB shall determine if the tree cutting activities will require ECC1CNC based on the extent of tree cutting operations. location (e.g. Environmentally Critical Area), among others, if necessary (1 certified copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 27,  'subclass_id' => 4, 'title' => 'Free Prior and Informed Consent', 'slug' => 'FPIC', 'description' => 'Free, Prior and Informed Consent (FPIC): if applicable','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 28,  'subclass_id' => 4, 'title' => 'Waiver or Consent of own errs', 'slug' => 'WOOE', 'description' => 'Waiver/Consent of own errs, if titled property (1 original)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 29,  'subclass_id' => 4, 'title' => 'PAMB Clearance or Resolution', 'slug' => 'PAMBC', 'description' => 'PAMB Clearance/Resolution, if within Protected Area (1 original)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 30,  'subclass_id' => 4, 'title' => 'Inventory of trees to be Cut', 'slug' => 'IOTTBC', 'description' => 'Report duly signed by the forest officers who conducted the inventory of trees to be cut, to include the result of 100% inventory','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 31,  'subclass_id' => 4, 'title' => 'Proposed Development Plan of the Project', 'slug' => 'PDPOTP', 'description' => 'Copy of the proposed development plan of the project incorporating therein the relative location of the Mangrove species.','attachment_type' => 'file' , 'requirement_type' => 'additional']);
        redts_y_requirements::create(['id' => 32,  'subclass_id' => 4, 'title' => 'In-Depth Review of the Proposed Project', 'slug' => 'IDROTPP', 'description' => 'In-Depth review of the proposed project, taking into consideration the possible options for re-alignment/adjustment to lessen the number of Mangrove to be affected','attachment_type' => 'file' , 'requirement_type' => 'additional']);
        redts_y_requirements::create(['id' => 33,  'subclass_id' => 4, 'title' => 'Justification that the Mangroves can no longer be avoided', 'slug' => 'JMCA', 'description' => 'Justification that the Mangroves can no longer be avoided and possible option to minimize/damage to the Mangrove area.','attachment_type' => 'file' , 'requirement_type' => 'additional']);
        
        redts_y_requirements::create(['id' => 34,  'subclass_id' => 5, 'title' => 'Issued Tenurial instrument', 'slug' => 'ITI', 'description' => '4.23 Tenurial instruments - are leases, permits, agreements, joint venture or production sharing agreements, and licenses concerning the development, exploration and utilization of the country\'s natural resources. SECTION 5. Creation of an Asset Management Team (AMT). src: https://law.upd.edu.ph/wp-content/uploads/2020/11/DENR-Administrative-Order-No-2020-09.pdf','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 35,  'subclass_id' => 5, 'title' => 'Brand', 'slug' => 'Brand', 'description' => 'e.g. Stihl, Husqvarna, Makita, Echo, Poulan, etc . . .','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 36,  'subclass_id' => 5, 'title' => 'Model', 'slug' => 'Model', 'description' => 'To find the chainsaw model, look for a label or sticker on the body of the chainsaw, or consult the user manual that comes with it.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 37,  'subclass_id' => 5, 'title' => 'Engine Capacity', 'slug' => 'EngCap', 'description' => 'You can typically find the chainsaw\'s capacity in terms of engine power (usually in cubic centimeters or cc) on a label or sticker located on the body of the chainsaw or in the user manual.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 38,  'subclass_id' => 5, 'title' => 'Serial Number', 'slug' => 'Ser_Num', 'description' => 'The serial number for your chainsaw is commonly located on a metal plate or sticker on the body of the chainsaw, often near the engine or handle. Refer to the user manual or manufacturer\'s instructions for specific guidance on where to locate the serial number for your particular chainsaw model','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 39,  'subclass_id' => 5, 'title' => 'Purpose of Use', 'slug' => 'Prps_of_Use', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 40,  'subclass_id' => 5, 'title' => 'Area or Location the chainsaw will be used', 'slug' => 'Area_used', 'description' => 'Area or Location the chainsaw will be used','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 41,  'subclass_id' => 5, 'title' => 'Name of Owner', 'slug' => 'NOO', 'description' => 'Input the full name of where the owner of the chainsaw will be registered','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 42,  'subclass_id' => 5, 'title' => 'Date of Purchase', 'slug' => 'Date_of_Purchase', 'description' => '','attachment_type' => 'date' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 43,  'subclass_id' => 5, 'title' => 'Name of Dealer', 'slug' => 'Dealer', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 44,  'subclass_id' => 5, 'title' => 'Proof of ownership', 'slug' => 'Proof_own', 'description' => 'Sales Invoice, Deed of Sale, etc.','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 94,  'subclass_id' => 5, 'title' => 'Clear Photo of Applicant', 'slug' => 'PhotoApp', 'description' => 'Upload clear half body photo of the applicant','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 45,  'subclass_id' => 6, 'title' => 'Brand', 'slug' => 'Brand', 'description' => 'e.g. Stihl, Husqvarna, Makita, Echo, Poulan, etc . . .','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 46,  'subclass_id' => 6, 'title' => 'Model', 'slug' => 'Model', 'description' => 'To find the chainsaw model, look for a label or sticker on the body of the chainsaw, or consult the user manual that comes with it.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 47,  'subclass_id' => 6, 'title' => 'Engine Capacity', 'slug' => 'EngCap', 'description' => 'You can typically find the chainsaw\'s capacity in terms of engine power (usually in cubic centimeters or cc) on a label or sticker located on the body of the chainsaw or in the user manual.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 48,  'subclass_id' => 6, 'title' => 'Serial Number', 'slug' => 'Ser_Num', 'description' => 'The serial number for your chainsaw is commonly located on a metal plate or sticker on the body of the chainsaw, often near the engine or handle. Refer to the user manual or manufacturer\'s instructions for specific guidance on where to locate the serial number for your particular chainsaw model','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 49,  'subclass_id' => 6, 'title' => 'Purpose of Use', 'slug' => 'Prps_of_Use', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 50,  'subclass_id' => 6, 'title' => 'Area or Location the chainsaw will be used', 'slug' => 'Area_used', 'description' => 'Area or Location the chainsaw will be used','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 51,  'subclass_id' => 6, 'title' => 'Name of Owner', 'slug' => 'NOO', 'description' => 'Input the full name of where the owner of the chainsaw will be registered','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 52,  'subclass_id' => 6, 'title' => 'Date of Purchase', 'slug' => 'Date_of_Purchase', 'description' => '','attachment_type' => 'date' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 53,  'subclass_id' => 6, 'title' => 'Name of Dealer', 'slug' => 'Dealer', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 54,  'subclass_id' => 6, 'title' => 'Proof of ownership', 'slug' => 'Proof_own', 'description' => 'Sales Invoice, Deed of Sale, etc.','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 55,  'subclass_id' => 6, 'title' => 'Certificate of Tree Plantation Ownership', 'slug' => 'Plant_Ownership', 'description' => '','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 56,  'subclass_id' => 6, 'title' => 'Certification from the concerned Barangay Captain', 'slug' => 'Cons_Brgy_Capt', 'description' => 'Certification from the concerned Barangay Captain, that the applicant is an orchard or tree farmer','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 95,  'subclass_id' => 6, 'title' => 'Clear Photo of Applicant', 'slug' => 'PhotoApp', 'description' => 'Upload clear half body photo of the applicant','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 57,  'subclass_id' => 7, 'title' => 'Approved Wood Processing Plan Permit', 'slug' => 'WPPP', 'description' => '','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 58,  'subclass_id' => 7, 'title' => 'Brand', 'slug' => 'Brand', 'description' => 'e.g. Stihl, Husqvarna, Makita, Echo, Poulan, etc . . .','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 59,  'subclass_id' => 7, 'title' => 'Model', 'slug' => 'Model', 'description' => 'To find the chainsaw model, look for a label or sticker on the body of the chainsaw, or consult the user manual that comes with it.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 60,  'subclass_id' => 7, 'title' => 'Engine Capacity', 'slug' => 'EngCap', 'description' => 'You can typically find the chainsaw\'s capacity in terms of engine power (usually in cubic centimeters or cc) on a label or sticker located on the body of the chainsaw or in the user manual.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 61,  'subclass_id' => 7, 'title' => 'Serial Number', 'slug' => 'Ser_Num', 'description' => 'The serial number for your chainsaw is commonly located on a metal plate or sticker on the body of the chainsaw, often near the engine or handle. Refer to the user manual or manufacturer\'s instructions for specific guidance on where to locate the serial number for your particular chainsaw model','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 62,  'subclass_id' => 7, 'title' => 'Purpose of Use', 'slug' => 'Prps_of_Use', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 63,  'subclass_id' => 7, 'title' => 'Area or Location the chainsaw will be used', 'slug' => 'Area_used', 'description' => 'Area or Location the chainsaw will be used','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 64,  'subclass_id' => 7, 'title' => 'Name of Owner', 'slug' => 'NOO', 'description' => 'Input the full name of where the owner of the chainsaw will be registered','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 65,  'subclass_id' => 7, 'title' => 'Date of Purchase', 'slug' => 'Date_of_Purchase', 'description' => '','attachment_type' => 'date' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 66,  'subclass_id' => 7, 'title' => 'Name of Dealer', 'slug' => 'Dealer', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 67,  'subclass_id' => 7, 'title' => 'Proof of ownership', 'slug' => 'Proof_own', 'description' => 'Sales Invoice, Deed of Sale, etc.','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 96,  'subclass_id' => 7, 'title' => 'Clear Photo of Applicant', 'slug' => 'PhotoApp', 'description' => 'Upload clear half body photo of the applicant','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 68,  'subclass_id' => 8, 'title' => 'Certification from the Head of Office', 'slug' => 'CftHoO', 'description' => 'Certification from the Head of Office or his/her authorized representative, that the chainsaws are owned/possessed by the office and will be used for legal purpose','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 69,  'subclass_id' => 8, 'title' => 'Brand', 'slug' => 'Brand', 'description' => 'e.g. Stihl, Husqvarna, Makita, Echo, Poulan, etc . . .','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 70,  'subclass_id' => 8, 'title' => 'Model', 'slug' => 'Model', 'description' => 'To find the chainsaw model, look for a label or sticker on the body of the chainsaw, or consult the user manual that comes with it.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 71,  'subclass_id' => 8, 'title' => 'Engine Capacity', 'slug' => 'EngCap', 'description' => 'You can typically find the chainsaw\'s capacity in terms of engine power (usually in cubic centimeters or cc) on a label or sticker located on the body of the chainsaw or in the user manual.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 72,  'subclass_id' => 8, 'title' => 'Serial Number', 'slug' => 'Ser_Num', 'description' => 'The serial number for your chainsaw is commonly located on a metal plate or sticker on the body of the chainsaw, often near the engine or handle. Refer to the user manual or manufacturer\'s instructions for specific guidance on where to locate the serial number for your particular chainsaw model','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 73,  'subclass_id' => 8, 'title' => 'Purpose of Use', 'slug' => 'Prps_of_Use', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 74,  'subclass_id' => 8, 'title' => 'Area or Location the chainsaw will be used', 'slug' => 'Area_used', 'description' => 'Area or Location the chainsaw will be used','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 75,  'subclass_id' => 8, 'title' => 'Name of Owner', 'slug' => 'NOO', 'description' => 'Input the full name of where the owner of the chainsaw will be registered','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 76,  'subclass_id' => 8, 'title' => 'Date of Purchase', 'slug' => 'Date_of_Purchase', 'description' => '','attachment_type' => 'date' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 77,  'subclass_id' => 8, 'title' => 'Name of Dealer', 'slug' => 'Dealer', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 98,  'subclass_id' => 8, 'title' => 'Clear Photo of Applicant', 'slug' => 'PhotoApp', 'description' => 'Upload clear half body photo of the applicant','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 78,  'subclass_id' => 9, 'title' => 'Business Permit from the Local Government Unit', 'slug' => 'BPoLG', 'description' => 'Clear and readable uploaded Business Permit from the Local Government Unit or Affidavit that the chainsaw is needed in the applicantâ€™s work/profession; and will be used for legal purpose','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 79,  'subclass_id' => 9, 'title' => 'Brand', 'slug' => 'Brand', 'description' => 'e.g. Stihl, Husqvarna, Makita, Echo, Poulan, etc . . .','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 80,  'subclass_id' => 9, 'title' => 'Model', 'slug' => 'Model', 'description' => 'To find the chainsaw model, look for a label or sticker on the body of the chainsaw, or consult the user manual that comes with it.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 81,  'subclass_id' => 9, 'title' => 'Engine Capacity', 'slug' => 'EngCap', 'description' => 'You can typically find the chainsaw\'s capacity in terms of engine power (usually in cubic centimeters or cc) on a label or sticker located on the body of the chainsaw or in the user manual.','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 82,  'subclass_id' => 9, 'title' => 'Serial Number', 'slug' => 'Ser_Num', 'description' => 'The serial number for your chainsaw is commonly located on a metal plate or sticker on the body of the chainsaw, often near the engine or handle. Refer to the user manual or manufacturer\'s instructions for specific guidance on where to locate the serial number for your particular chainsaw model','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 83,  'subclass_id' => 9, 'title' => 'Purpose of Use', 'slug' => 'Prps_of_Use', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 84,  'subclass_id' => 9, 'title' => 'Area or Location the chainsaw will be used', 'slug' => 'Area_used', 'description' => 'Area or Location the chainsaw will be used','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 85,  'subclass_id' => 9, 'title' => 'Name of Owner', 'slug' => 'NOO', 'description' => 'Input the full name of where the owner of the chainsaw will be registered','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 86,  'subclass_id' => 9, 'title' => 'Date of Purchase', 'slug' => 'Date_of_Purchase', 'description' => '','attachment_type' => 'date' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 87,  'subclass_id' => 9, 'title' => 'Name of Dealer', 'slug' => 'Dealer', 'description' => '','attachment_type' => 'text' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 97,  'subclass_id' => 9, 'title' => 'Clear Photo of Applicant', 'slug' => 'PhotoApp', 'description' => 'Upload clear half body photo of the applicant','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 88,  'subclass_id' => 10, 'title' => 'Latest Certificate of Chainsaw Registration', 'slug' => 'CoCR', 'description' => 'Clear and readable uploaded Certificate of Chainsaw Registration','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 99,  'subclass_id' => 10, 'title' => 'Previous Document Tracking Number', 'slug' => 'PDTN', 'description' => 'Input the previous tracking number of the chainsaw registration','attachment_type' => 'file' , 'requirement_type' => 'required']);
        
        redts_y_requirements::create(['id' => 89,  'subclass_id' => 11, 'title' => 'Letter of Intent', 'slug' => 'LOI', 'description' => 'Letter of Intent (1 original copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 90,  'subclass_id' => 11, 'title' => 'Research Proposal', 'slug' => 'RP', 'description' => 'Research Proposal (1 original copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 91,  'subclass_id' => 11, 'title' => 'Prior Informed Clearance from concerned PAMB or LGU or NCIP', 'slug' => 'CL', 'description' => 'CL from concerned PMB or LGU or NCIP (1 original copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 92,  'subclass_id' => 11, 'title' => 'Researchers Profile', 'slug' => 'RSP', 'description' => 'Researcher\'s Profile (1 original copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
        redts_y_requirements::create(['id' => 93,  'subclass_id' => 11, 'title' => 'Endorsement from the Head of School', 'slug' => 'ENDTHS', 'description' => 'Endorsement from the Head of School (1 original copy)','attachment_type' => 'file' , 'requirement_type' => 'required']);
    }
}


